services:
  db:
    container_name: postgres_container
    image: postgres:17.4-bullseye
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    volumes:
      - "./database/postgres/data/:/db-data"
      - "./database/postgres/migrations/:/db-migration"
  db_setup:
    image: ghcr.io/jackc/tern:v2.3.2
    restart: no
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "./database/postgres/migrations/:/db-migration"
    entrypoint:
      [
        "/tern",
        "migrate",
        "--migrations",
        "/db-migration",
        "--conn-string",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT_EXTERNAL}/${POSTGRES_DB}?sslmode=disable",
      ]
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT_EXTERNAL}:${PGADMIN_PORT}"
  db_cache:
    container_name: redis_container
    image: redis:8.0-M04
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - "./database/redis/data/:/db-cache"
volumes:
  db-data:
  db-migration:
  db-cache:
